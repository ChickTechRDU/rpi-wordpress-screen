----
DO BEFORE LAB:

systemctl enable ssh
systemctl start ssh

Keyboard preferences - US keyboard  
check for pipe character 

update the system 
apt-get update
apt-get upgrade


LAB DAY:
Connect to the network
network - US
drop down - network 

user: pi 
password: raspberry

become root
sudo su -

update the system 
apt-get update
apt-get upgrade

Install wordpress
https://wiki.debian.org/WordPress
apt-get install wordpress curl apache2 mariadb-server i2c-tools vim lsof python-bs4
systemctl enable apache2
systemctl enable mariadb

Lets look at a static website
you'll see an error page
let replace that with some text
echo "hi chicktech" > /var/www/html/index.html
Open a browser go to http://localhost

set hosts
vi /etc/hosts
10.192.211.36   blog.example.com

create database
gzip -d /usr/share/doc/wordpress/examples/setup-mysql.gz
chmod +x /usr/share/doc/wordpress/examples/setup-mysql
/usr/share/doc/wordpress/examples/setup-mysql blog.example.com

enable some apache modules
a2enmod rewrite
a2enmod vhost_alias

create the site config
vim  /etc/apache2/sites-available/myblog.conf

<VirtualHost *:80>
        ServerName blog.example.com

        ServerAdmin webmaster@example.com
        DocumentRoot /usr/share/wordpress

        Alias /wp-content /var/lib/wordpress/wp-content
        <Directory /usr/share/wordpress>
            Options FollowSymLinks
            AllowOverride Limit Options FileInfo
            DirectoryIndex index.php
            Require all granted
        </Directory>
        <Directory /var/lib/wordpress/wp-content>
            Options FollowSymLinks
            Require all granted
        </Directory>

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

</VirtualHost>


vim /etc/wordpress/htaccess
uncomment the / part
systemctl restart apache2

vim /usr/share/wordpress/wp-config.php
define('FS_METHOD','direct');

a2dissite 000-default
a2dissite default-ssl
a2ensite myblog.conf
rm /var/www/html/index.html
systemctl restart apache2



response = requests.get('http://blog.example.com/wp-json/wp/v2/posts?per_page=1')
#print response.json()[0]['content']['rendered']
x = BeautifulSoup(response.json()[0]['content']['rendered'], "lxml")
#print x.get_text().replace('\n','\n\n')
print x.get_text()
